{"ast":null,"code":"var _jsxFileName = \"/home/farrukh/development/reactjs/Covid-19-Tracker-App/src/components/StateData.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { Typography } from '@material-ui/core';\nimport NumberFormat from 'react-number-format'; // import component\n\nimport DataChart from './DataChart';\nconst useStylesPapers = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      width: \"30%\",\n      height: theme.spacing(16),\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      marginTop: \"40px\",\n      marginBottom: \"20px\"\n    }\n  },\n  typo: {\n    width: '100%',\n    maxWidth: 500,\n    marginTop: 25\n  },\n  titleSize: {\n    fontSize: \"1.8vw\"\n  }\n}));\n\nfunction countryToFlag(isoCode) {\n  return typeof String.fromCodePoint !== 'undefined' ? isoCode.toUpperCase().replace(/./g, char => String.fromCodePoint(char.charCodeAt(0) + 127397)) : isoCode;\n}\n\nconst useStyles = makeStyles({\n  option: {\n    fontSize: 15,\n    '& > span': {\n      marginRight: 10,\n      fontSize: 18\n    }\n  }\n});\n\nconst StateData = () => {\n  const classes = useStyles();\n  const paperClasses = useStylesPapers();\n  const [countryName, setCountryName] = useState();\n  const [stateData, setStateData] = useState();\n  useEffect(() => {\n    async function fatchData() {\n      setStateData();\n      const apiResponse = await fetch(`https://api.covid19api.com/total/country/${countryName}`);\n      const dataFromApi = await apiResponse.json();\n      console.log(dataFromApi); // for (const [key, value] of Object.entries(dataFromApi)) {\n      //     var cC = 0, rC = 0, dC = 0;\n      //     cC = cC + value.All.confirmed;\n      //     rC = rC + value.All.recovered;\n      //     dC = dC + value.All.deaths;\n      //   }      \n      // setStateData(dataFromApi[dataFromApi.length - 1])\n      // // console.log(dataFromApi[dataFromApi.length - 1])\n    }\n\n    fatchData();\n  }, [countryName]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Autocomplete, {\n    onChange: (event, value) => {\n      value !== null && setCountryName(value.label.replaceAll(\" \", \"-\"));\n    },\n    id: \"country-select-demo\",\n    style: {\n      width: 300\n    },\n    options: countries,\n    classes: {\n      option: classes.option\n    },\n    autoHighlight: true,\n    getOptionLabel: option => option.label,\n    renderOption: option => /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, countryToFlag(option.code)), option.label, \" (\", option.code, \")\"),\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      label: \"Choose a country\",\n      variant: \"outlined\",\n      inputProps: { ...params.inputProps,\n        autoComplete: 'new-password' // disable autocomplete and autofill\n\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: paperClasses.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: paperClasses.typo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NumberFormat, {\n    value: stateData && stateData.Confirmed,\n    displayType: 'text',\n    thousandSeparator: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    className: paperClasses.titleSize,\n    variant: \"subtitle2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, \"Confirmed Cases\"))), /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: paperClasses.typo,\n    style: {\n      color: \"green\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NumberFormat, {\n    value: stateData && stateData.Recovered,\n    displayType: 'text',\n    thousandSeparator: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    className: paperClasses.titleSize,\n    variant: \"subtitle2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, \"Recovered\"))), /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: paperClasses.typo,\n    style: {\n      color: \"gray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(NumberFormat, {\n    value: stateData && stateData.Deaths,\n    displayType: 'text',\n    thousandSeparator: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    className: paperClasses.titleSize,\n    variant: \"subtitle2\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, \"Deaths\")))), /*#__PURE__*/React.createElement(DataChart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 14\n    }\n  }));\n};\n\nexport default StateData; // From https://bitbucket.org/atlassian/atlaskit-mk-2/raw/4ad0e56649c3e6c973e226b7efaeb28cb240ccb0/packages/core/select/src/data/countries.js\n\nconst countries = [{\n  code: 'AD',\n  label: 'Andorra',\n  phone: '376'\n}, {\n  code: 'AE',\n  label: 'United Arab Emirates',\n  phone: '971'\n}, {\n  code: 'AF',\n  label: 'Afghanistan',\n  phone: '93'\n}, {\n  code: 'AG',\n  label: 'Antigua and Barbuda',\n  phone: '1-268'\n}, {\n  code: 'AI',\n  label: 'Anguilla',\n  phone: '1-264'\n}, {\n  code: 'AL',\n  label: 'Albania',\n  phone: '355'\n}, {\n  code: 'AM',\n  label: 'Armenia',\n  phone: '374'\n}, {\n  code: 'AO',\n  label: 'Angola',\n  phone: '244'\n}, {\n  code: 'AQ',\n  label: 'Antarctica',\n  phone: '672'\n}, {\n  code: 'AR',\n  label: 'Argentina',\n  phone: '54'\n}, {\n  code: 'AS',\n  label: 'American Samoa',\n  phone: '1-684'\n}, {\n  code: 'AT',\n  label: 'Austria',\n  phone: '43'\n}, {\n  code: 'AU',\n  label: 'Australia',\n  phone: '61',\n  suggested: true\n}, {\n  code: 'AW',\n  label: 'Aruba',\n  phone: '297'\n}, {\n  code: 'AX',\n  label: 'Alland Islands',\n  phone: '358'\n}, {\n  code: 'AZ',\n  label: 'Azerbaijan',\n  phone: '994'\n}, {\n  code: 'BA',\n  label: 'Bosnia and Herzegovina',\n  phone: '387'\n}, {\n  code: 'BB',\n  label: 'Barbados',\n  phone: '1-246'\n}, {\n  code: 'BD',\n  label: 'Bangladesh',\n  phone: '880'\n}, {\n  code: 'BE',\n  label: 'Belgium',\n  phone: '32'\n}, {\n  code: 'BF',\n  label: 'Burkina Faso',\n  phone: '226'\n}, {\n  code: 'BG',\n  label: 'Bulgaria',\n  phone: '359'\n}, {\n  code: 'BH',\n  label: 'Bahrain',\n  phone: '973'\n}, {\n  code: 'BI',\n  label: 'Burundi',\n  phone: '257'\n}, {\n  code: 'BJ',\n  label: 'Benin',\n  phone: '229'\n}, {\n  code: 'BL',\n  label: 'Saint Barthelemy',\n  phone: '590'\n}, {\n  code: 'BM',\n  label: 'Bermuda',\n  phone: '1-441'\n}, {\n  code: 'BN',\n  label: 'Brunei Darussalam',\n  phone: '673'\n}, {\n  code: 'BO',\n  label: 'Bolivia',\n  phone: '591'\n}, {\n  code: 'BR',\n  label: 'Brazil',\n  phone: '55'\n}, {\n  code: 'BS',\n  label: 'Bahamas',\n  phone: '1-242'\n}, {\n  code: 'BT',\n  label: 'Bhutan',\n  phone: '975'\n}, {\n  code: 'BV',\n  label: 'Bouvet Island',\n  phone: '47'\n}, {\n  code: 'BW',\n  label: 'Botswana',\n  phone: '267'\n}, {\n  code: 'BY',\n  label: 'Belarus',\n  phone: '375'\n}, {\n  code: 'BZ',\n  label: 'Belize',\n  phone: '501'\n}, {\n  code: 'CA',\n  label: 'Canada',\n  phone: '1',\n  suggested: true\n}, {\n  code: 'CC',\n  label: 'Cocos (Keeling) Islands',\n  phone: '61'\n}, {\n  code: 'CD',\n  label: 'Congo, Democratic Republic of the',\n  phone: '243'\n}, {\n  code: 'CF',\n  label: 'Central African Republic',\n  phone: '236'\n}, {\n  code: 'CG',\n  label: 'Congo, Republic of the',\n  phone: '242'\n}, {\n  code: 'CH',\n  label: 'Switzerland',\n  phone: '41'\n}, {\n  code: 'CI',\n  label: \"Cote d'Ivoire\",\n  phone: '225'\n}, {\n  code: 'CK',\n  label: 'Cook Islands',\n  phone: '682'\n}, {\n  code: 'CL',\n  label: 'Chile',\n  phone: '56'\n}, {\n  code: 'CM',\n  label: 'Cameroon',\n  phone: '237'\n}, {\n  code: 'CN',\n  label: 'China',\n  phone: '86'\n}, {\n  code: 'CO',\n  label: 'Colombia',\n  phone: '57'\n}, {\n  code: 'CR',\n  label: 'Costa Rica',\n  phone: '506'\n}, {\n  code: 'CU',\n  label: 'Cuba',\n  phone: '53'\n}, {\n  code: 'CV',\n  label: 'Cape Verde',\n  phone: '238'\n}, {\n  code: 'CW',\n  label: 'Curacao',\n  phone: '599'\n}, {\n  code: 'CX',\n  label: 'Christmas Island',\n  phone: '61'\n}, {\n  code: 'CY',\n  label: 'Cyprus',\n  phone: '357'\n}, {\n  code: 'CZ',\n  label: 'Czech Republic',\n  phone: '420'\n}, {\n  code: 'DE',\n  label: 'Germany',\n  phone: '49',\n  suggested: true\n}, {\n  code: 'DJ',\n  label: 'Djibouti',\n  phone: '253'\n}, {\n  code: 'DK',\n  label: 'Denmark',\n  phone: '45'\n}, {\n  code: 'DM',\n  label: 'Dominica',\n  phone: '1-767'\n}, {\n  code: 'DO',\n  label: 'Dominican Republic',\n  phone: '1-809'\n}, {\n  code: 'DZ',\n  label: 'Algeria',\n  phone: '213'\n}, {\n  code: 'EC',\n  label: 'Ecuador',\n  phone: '593'\n}, {\n  code: 'EE',\n  label: 'Estonia',\n  phone: '372'\n}, {\n  code: 'EG',\n  label: 'Egypt',\n  phone: '20'\n}, {\n  code: 'EH',\n  label: 'Western Sahara',\n  phone: '212'\n}, {\n  code: 'ER',\n  label: 'Eritrea',\n  phone: '291'\n}, {\n  code: 'ES',\n  label: 'Spain',\n  phone: '34'\n}, {\n  code: 'ET',\n  label: 'Ethiopia',\n  phone: '251'\n}, {\n  code: 'FI',\n  label: 'Finland',\n  phone: '358'\n}, {\n  code: 'FJ',\n  label: 'Fiji',\n  phone: '679'\n}, {\n  code: 'FK',\n  label: 'Falkland Islands (Malvinas)',\n  phone: '500'\n}, {\n  code: 'FM',\n  label: 'Micronesia, Federated States of',\n  phone: '691'\n}, {\n  code: 'FO',\n  label: 'Faroe Islands',\n  phone: '298'\n}, {\n  code: 'FR',\n  label: 'France',\n  phone: '33',\n  suggested: true\n}, {\n  code: 'GA',\n  label: 'Gabon',\n  phone: '241'\n}, {\n  code: 'GB',\n  label: 'United Kingdom',\n  phone: '44'\n}, {\n  code: 'GD',\n  label: 'Grenada',\n  phone: '1-473'\n}, {\n  code: 'GE',\n  label: 'Georgia',\n  phone: '995'\n}, {\n  code: 'GF',\n  label: 'French Guiana',\n  phone: '594'\n}, {\n  code: 'GG',\n  label: 'Guernsey',\n  phone: '44'\n}, {\n  code: 'GH',\n  label: 'Ghana',\n  phone: '233'\n}, {\n  code: 'GI',\n  label: 'Gibraltar',\n  phone: '350'\n}, {\n  code: 'GL',\n  label: 'Greenland',\n  phone: '299'\n}, {\n  code: 'GM',\n  label: 'Gambia',\n  phone: '220'\n}, {\n  code: 'GN',\n  label: 'Guinea',\n  phone: '224'\n}, {\n  code: 'GP',\n  label: 'Guadeloupe',\n  phone: '590'\n}, {\n  code: 'GQ',\n  label: 'Equatorial Guinea',\n  phone: '240'\n}, {\n  code: 'GR',\n  label: 'Greece',\n  phone: '30'\n}, {\n  code: 'GS',\n  label: 'South Georgia and the South Sandwich Islands',\n  phone: '500'\n}, {\n  code: 'GT',\n  label: 'Guatemala',\n  phone: '502'\n}, {\n  code: 'GU',\n  label: 'Guam',\n  phone: '1-671'\n}, {\n  code: 'GW',\n  label: 'Guinea-Bissau',\n  phone: '245'\n}, {\n  code: 'GY',\n  label: 'Guyana',\n  phone: '592'\n}, {\n  code: 'HK',\n  label: 'Hong Kong',\n  phone: '852'\n}, {\n  code: 'HM',\n  label: 'Heard Island and McDonald Islands',\n  phone: '672'\n}, {\n  code: 'HN',\n  label: 'Honduras',\n  phone: '504'\n}, {\n  code: 'HR',\n  label: 'Croatia',\n  phone: '385'\n}, {\n  code: 'HT',\n  label: 'Haiti',\n  phone: '509'\n}, {\n  code: 'HU',\n  label: 'Hungary',\n  phone: '36'\n}, {\n  code: 'ID',\n  label: 'Indonesia',\n  phone: '62'\n}, {\n  code: 'IE',\n  label: 'Ireland',\n  phone: '353'\n}, {\n  code: 'IL',\n  label: 'Israel',\n  phone: '972'\n}, {\n  code: 'IM',\n  label: 'Isle of Man',\n  phone: '44'\n}, {\n  code: 'IN',\n  label: 'India',\n  phone: '91'\n}, {\n  code: 'IO',\n  label: 'British Indian Ocean Territory',\n  phone: '246'\n}, {\n  code: 'IQ',\n  label: 'Iraq',\n  phone: '964'\n}, {\n  code: 'IR',\n  label: 'Iran, Islamic Republic of',\n  phone: '98'\n}, {\n  code: 'IS',\n  label: 'Iceland',\n  phone: '354'\n}, {\n  code: 'IT',\n  label: 'Italy',\n  phone: '39'\n}, {\n  code: 'JE',\n  label: 'Jersey',\n  phone: '44'\n}, {\n  code: 'JM',\n  label: 'Jamaica',\n  phone: '1-876'\n}, {\n  code: 'JO',\n  label: 'Jordan',\n  phone: '962'\n}, {\n  code: 'JP',\n  label: 'Japan',\n  phone: '81',\n  suggested: true\n}, {\n  code: 'KE',\n  label: 'Kenya',\n  phone: '254'\n}, {\n  code: 'KG',\n  label: 'Kyrgyzstan',\n  phone: '996'\n}, {\n  code: 'KH',\n  label: 'Cambodia',\n  phone: '855'\n}, {\n  code: 'KI',\n  label: 'Kiribati',\n  phone: '686'\n}, {\n  code: 'KM',\n  label: 'Comoros',\n  phone: '269'\n}, {\n  code: 'KN',\n  label: 'Saint Kitts and Nevis',\n  phone: '1-869'\n}, {\n  code: 'KP',\n  label: \"Korea, Democratic People's Republic of\",\n  phone: '850'\n}, {\n  code: 'KR',\n  label: 'Korea, Republic of',\n  phone: '82'\n}, {\n  code: 'KW',\n  label: 'Kuwait',\n  phone: '965'\n}, {\n  code: 'KY',\n  label: 'Cayman Islands',\n  phone: '1-345'\n}, {\n  code: 'KZ',\n  label: 'Kazakhstan',\n  phone: '7'\n}, {\n  code: 'LA',\n  label: \"Lao People's Democratic Republic\",\n  phone: '856'\n}, {\n  code: 'LB',\n  label: 'Lebanon',\n  phone: '961'\n}, {\n  code: 'LC',\n  label: 'Saint Lucia',\n  phone: '1-758'\n}, {\n  code: 'LI',\n  label: 'Liechtenstein',\n  phone: '423'\n}, {\n  code: 'LK',\n  label: 'Sri Lanka',\n  phone: '94'\n}, {\n  code: 'LR',\n  label: 'Liberia',\n  phone: '231'\n}, {\n  code: 'LS',\n  label: 'Lesotho',\n  phone: '266'\n}, {\n  code: 'LT',\n  label: 'Lithuania',\n  phone: '370'\n}, {\n  code: 'LU',\n  label: 'Luxembourg',\n  phone: '352'\n}, {\n  code: 'LV',\n  label: 'Latvia',\n  phone: '371'\n}, {\n  code: 'LY',\n  label: 'Libya',\n  phone: '218'\n}, {\n  code: 'MA',\n  label: 'Morocco',\n  phone: '212'\n}, {\n  code: 'MC',\n  label: 'Monaco',\n  phone: '377'\n}, {\n  code: 'MD',\n  label: 'Moldova, Republic of',\n  phone: '373'\n}, {\n  code: 'ME',\n  label: 'Montenegro',\n  phone: '382'\n}, {\n  code: 'MF',\n  label: 'Saint Martin (French part)',\n  phone: '590'\n}, {\n  code: 'MG',\n  label: 'Madagascar',\n  phone: '261'\n}, {\n  code: 'MH',\n  label: 'Marshall Islands',\n  phone: '692'\n}, {\n  code: 'MK',\n  label: 'Macedonia, the Former Yugoslav Republic of',\n  phone: '389'\n}, {\n  code: 'ML',\n  label: 'Mali',\n  phone: '223'\n}, {\n  code: 'MM',\n  label: 'Myanmar',\n  phone: '95'\n}, {\n  code: 'MN',\n  label: 'Mongolia',\n  phone: '976'\n}, {\n  code: 'MO',\n  label: 'Macao',\n  phone: '853'\n}, {\n  code: 'MP',\n  label: 'Northern Mariana Islands',\n  phone: '1-670'\n}, {\n  code: 'MQ',\n  label: 'Martinique',\n  phone: '596'\n}, {\n  code: 'MR',\n  label: 'Mauritania',\n  phone: '222'\n}, {\n  code: 'MS',\n  label: 'Montserrat',\n  phone: '1-664'\n}, {\n  code: 'MT',\n  label: 'Malta',\n  phone: '356'\n}, {\n  code: 'MU',\n  label: 'Mauritius',\n  phone: '230'\n}, {\n  code: 'MV',\n  label: 'Maldives',\n  phone: '960'\n}, {\n  code: 'MW',\n  label: 'Malawi',\n  phone: '265'\n}, {\n  code: 'MX',\n  label: 'Mexico',\n  phone: '52'\n}, {\n  code: 'MY',\n  label: 'Malaysia',\n  phone: '60'\n}, {\n  code: 'MZ',\n  label: 'Mozambique',\n  phone: '258'\n}, {\n  code: 'NA',\n  label: 'Namibia',\n  phone: '264'\n}, {\n  code: 'NC',\n  label: 'New Caledonia',\n  phone: '687'\n}, {\n  code: 'NE',\n  label: 'Niger',\n  phone: '227'\n}, {\n  code: 'NF',\n  label: 'Norfolk Island',\n  phone: '672'\n}, {\n  code: 'NG',\n  label: 'Nigeria',\n  phone: '234'\n}, {\n  code: 'NI',\n  label: 'Nicaragua',\n  phone: '505'\n}, {\n  code: 'NL',\n  label: 'Netherlands',\n  phone: '31'\n}, {\n  code: 'NO',\n  label: 'Norway',\n  phone: '47'\n}, {\n  code: 'NP',\n  label: 'Nepal',\n  phone: '977'\n}, {\n  code: 'NR',\n  label: 'Nauru',\n  phone: '674'\n}, {\n  code: 'NU',\n  label: 'Niue',\n  phone: '683'\n}, {\n  code: 'NZ',\n  label: 'New Zealand',\n  phone: '64'\n}, {\n  code: 'OM',\n  label: 'Oman',\n  phone: '968'\n}, {\n  code: 'PA',\n  label: 'Panama',\n  phone: '507'\n}, {\n  code: 'PE',\n  label: 'Peru',\n  phone: '51'\n}, {\n  code: 'PF',\n  label: 'French Polynesia',\n  phone: '689'\n}, {\n  code: 'PG',\n  label: 'Papua New Guinea',\n  phone: '675'\n}, {\n  code: 'PH',\n  label: 'Philippines',\n  phone: '63'\n}, {\n  code: 'PK',\n  label: 'Pakistan',\n  phone: '92'\n}, {\n  code: 'PL',\n  label: 'Poland',\n  phone: '48'\n}, {\n  code: 'PM',\n  label: 'Saint Pierre and Miquelon',\n  phone: '508'\n}, {\n  code: 'PN',\n  label: 'Pitcairn',\n  phone: '870'\n}, {\n  code: 'PR',\n  label: 'Puerto Rico',\n  phone: '1'\n}, {\n  code: 'PS',\n  label: 'Palestine, State of',\n  phone: '970'\n}, {\n  code: 'PT',\n  label: 'Portugal',\n  phone: '351'\n}, {\n  code: 'PW',\n  label: 'Palau',\n  phone: '680'\n}, {\n  code: 'PY',\n  label: 'Paraguay',\n  phone: '595'\n}, {\n  code: 'QA',\n  label: 'Qatar',\n  phone: '974'\n}, {\n  code: 'RE',\n  label: 'Reunion',\n  phone: '262'\n}, {\n  code: 'RO',\n  label: 'Romania',\n  phone: '40'\n}, {\n  code: 'RS',\n  label: 'Serbia',\n  phone: '381'\n}, {\n  code: 'RU',\n  label: 'Russian Federation',\n  phone: '7'\n}, {\n  code: 'RW',\n  label: 'Rwanda',\n  phone: '250'\n}, {\n  code: 'SA',\n  label: 'Saudi Arabia',\n  phone: '966'\n}, {\n  code: 'SB',\n  label: 'Solomon Islands',\n  phone: '677'\n}, {\n  code: 'SC',\n  label: 'Seychelles',\n  phone: '248'\n}, {\n  code: 'SD',\n  label: 'Sudan',\n  phone: '249'\n}, {\n  code: 'SE',\n  label: 'Sweden',\n  phone: '46'\n}, {\n  code: 'SG',\n  label: 'Singapore',\n  phone: '65'\n}, {\n  code: 'SH',\n  label: 'Saint Helena',\n  phone: '290'\n}, {\n  code: 'SI',\n  label: 'Slovenia',\n  phone: '386'\n}, {\n  code: 'SJ',\n  label: 'Svalbard and Jan Mayen',\n  phone: '47'\n}, {\n  code: 'SK',\n  label: 'Slovakia',\n  phone: '421'\n}, {\n  code: 'SL',\n  label: 'Sierra Leone',\n  phone: '232'\n}, {\n  code: 'SM',\n  label: 'San Marino',\n  phone: '378'\n}, {\n  code: 'SN',\n  label: 'Senegal',\n  phone: '221'\n}, {\n  code: 'SO',\n  label: 'Somalia',\n  phone: '252'\n}, {\n  code: 'SR',\n  label: 'Suriname',\n  phone: '597'\n}, {\n  code: 'SS',\n  label: 'South Sudan',\n  phone: '211'\n}, {\n  code: 'ST',\n  label: 'Sao Tome and Principe',\n  phone: '239'\n}, {\n  code: 'SV',\n  label: 'El Salvador',\n  phone: '503'\n}, {\n  code: 'SX',\n  label: 'Sint Maarten (Dutch part)',\n  phone: '1-721'\n}, {\n  code: 'SY',\n  label: 'Syrian Arab Republic',\n  phone: '963'\n}, {\n  code: 'SZ',\n  label: 'Swaziland',\n  phone: '268'\n}, {\n  code: 'TC',\n  label: 'Turks and Caicos Islands',\n  phone: '1-649'\n}, {\n  code: 'TD',\n  label: 'Chad',\n  phone: '235'\n}, {\n  code: 'TF',\n  label: 'French Southern Territories',\n  phone: '262'\n}, {\n  code: 'TG',\n  label: 'Togo',\n  phone: '228'\n}, {\n  code: 'TH',\n  label: 'Thailand',\n  phone: '66'\n}, {\n  code: 'TJ',\n  label: 'Tajikistan',\n  phone: '992'\n}, {\n  code: 'TK',\n  label: 'Tokelau',\n  phone: '690'\n}, {\n  code: 'TL',\n  label: 'Timor-Leste',\n  phone: '670'\n}, {\n  code: 'TM',\n  label: 'Turkmenistan',\n  phone: '993'\n}, {\n  code: 'TN',\n  label: 'Tunisia',\n  phone: '216'\n}, {\n  code: 'TO',\n  label: 'Tonga',\n  phone: '676'\n}, {\n  code: 'TR',\n  label: 'Turkey',\n  phone: '90'\n}, {\n  code: 'TT',\n  label: 'Trinidad and Tobago',\n  phone: '1-868'\n}, {\n  code: 'TV',\n  label: 'Tuvalu',\n  phone: '688'\n}, {\n  code: 'TW',\n  label: 'Taiwan, Province of China',\n  phone: '886'\n}, {\n  code: 'TZ',\n  label: 'United Republic of Tanzania',\n  phone: '255'\n}, {\n  code: 'UA',\n  label: 'Ukraine',\n  phone: '380'\n}, {\n  code: 'UG',\n  label: 'Uganda',\n  phone: '256'\n}, {\n  code: 'US',\n  label: 'United States',\n  phone: '1',\n  suggested: true\n}, {\n  code: 'UY',\n  label: 'Uruguay',\n  phone: '598'\n}, {\n  code: 'UZ',\n  label: 'Uzbekistan',\n  phone: '998'\n}, {\n  code: 'VA',\n  label: 'Holy See (Vatican City State)',\n  phone: '379'\n}, {\n  code: 'VC',\n  label: 'Saint Vincent and the Grenadines',\n  phone: '1-784'\n}, {\n  code: 'VE',\n  label: 'Venezuela',\n  phone: '58'\n}, {\n  code: 'VG',\n  label: 'British Virgin Islands',\n  phone: '1-284'\n}, {\n  code: 'VI',\n  label: 'US Virgin Islands',\n  phone: '1-340'\n}, {\n  code: 'VN',\n  label: 'Vietnam',\n  phone: '84'\n}, {\n  code: 'VU',\n  label: 'Vanuatu',\n  phone: '678'\n}, {\n  code: 'WF',\n  label: 'Wallis and Futuna',\n  phone: '681'\n}, {\n  code: 'WS',\n  label: 'Samoa',\n  phone: '685'\n}, {\n  code: 'XK',\n  label: 'Kosovo',\n  phone: '383'\n}, {\n  code: 'YE',\n  label: 'Yemen',\n  phone: '967'\n}, {\n  code: 'YT',\n  label: 'Mayotte',\n  phone: '262'\n}, {\n  code: 'ZA',\n  label: 'South Africa',\n  phone: '27'\n}, {\n  code: 'ZM',\n  label: 'Zambia',\n  phone: '260'\n}, {\n  code: 'ZW',\n  label: 'Zimbabwe',\n  phone: '263'\n}];","map":{"version":3,"sources":["/home/farrukh/development/reactjs/Covid-19-Tracker-App/src/components/StateData.jsx"],"names":["React","useState","useEffect","TextField","Autocomplete","makeStyles","Paper","Typography","NumberFormat","DataChart","useStylesPapers","theme","root","display","flexWrap","width","height","spacing","marginLeft","marginRight","marginTop","marginBottom","typo","maxWidth","titleSize","fontSize","countryToFlag","isoCode","String","fromCodePoint","toUpperCase","replace","char","charCodeAt","useStyles","option","StateData","classes","paperClasses","countryName","setCountryName","stateData","setStateData","fatchData","apiResponse","fetch","dataFromApi","json","console","log","event","value","label","replaceAll","countries","code","params","inputProps","autoComplete","Confirmed","color","Recovered","Deaths","phone","suggested"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { Typography } from '@material-ui/core';\nimport NumberFormat from 'react-number-format';\n\n// import component\nimport DataChart from './DataChart'\n\nconst useStylesPapers = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      '& > *': {\n        width: \"30%\",\n        height: theme.spacing(16),\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        marginTop: \"40px\",\n        marginBottom: \"20px\"\n      },\n    },\n    typo: {\n      width: '100%',\n      maxWidth: 500,\n      marginTop: 25,\n  \n    },\n    titleSize: {\n        fontSize: \"1.8vw\"\n    }\n  }));\n  \n\nfunction countryToFlag(isoCode) {\n    return typeof String.fromCodePoint !== 'undefined'\n      ? isoCode\n          .toUpperCase()\n          .replace(/./g, (char) => String.fromCodePoint(char.charCodeAt(0) + 127397))\n      : isoCode;\n  }\n  \n  const useStyles = makeStyles({\n    option: {\n      fontSize: 15,\n      '& > span': {\n        marginRight: 10,\n        fontSize: 18,\n      },\n    },\n  });\n\nconst StateData = () => {\n    const classes = useStyles();\n    const paperClasses = useStylesPapers();\n    const [countryName, setCountryName] = useState();\n    const [stateData, setStateData] = useState();\n    \n\n    useEffect(() => {\n        async function fatchData(){\n            setStateData()\n            const apiResponse = await fetch(`https://api.covid19api.com/total/country/${countryName}`);\n            const dataFromApi = await apiResponse.json()\n            console.log(dataFromApi)\n            // for (const [key, value] of Object.entries(dataFromApi)) {\n            //     var cC = 0, rC = 0, dC = 0;\n            //     cC = cC + value.All.confirmed;\n            //     rC = rC + value.All.recovered;\n            //     dC = dC + value.All.deaths;\n            //   }      \n            // setStateData(dataFromApi[dataFromApi.length - 1])\n            // // console.log(dataFromApi[dataFromApi.length - 1])\n          }\n          fatchData()\n\n    }, [countryName])\n\n    return (\n        <div>\n\n            <Autocomplete\n                onChange={(event, value) => {value !== null && setCountryName(value.label.replaceAll(\" \",\"-\"))}}\n                id=\"country-select-demo\"\n                style={{ width: 300 }}\n                options={countries}\n\n                classes={{\n                    option: classes.option,\n                }}\n                autoHighlight\n                getOptionLabel={(option) => option.label}\n                renderOption={(option) => (\n                    <React.Fragment>\n                    <span>{countryToFlag(option.code)}</span>\n                    {option.label} ({option.code}) \n                    </React.Fragment>\n                )}\n                renderInput={(params) => (\n                    <TextField\n                    {...params}\n                    label=\"Choose a country\"\n                    variant=\"outlined\"\n                    inputProps={{\n                        ...params.inputProps,\n                        autoComplete: 'new-password', // disable autocomplete and autofill\n                    }}\n                    />\n                )}\n            />\n\n            <div className={paperClasses.root}>\n                <Paper elevation={3}>\n                    <div className={paperClasses.typo}>\n                        <Typography variant=\"h4\" gutterBottom>\n                            <NumberFormat value={stateData && stateData.Confirmed} displayType={'text'} thousandSeparator={true}/>\n                        </Typography>\n                        <Typography className={paperClasses.titleSize} variant=\"subtitle2\" gutterBottom>\n                            Confirmed Cases\n                        </Typography>\n                    </div>\n                </Paper>\n\n\n                <Paper elevation={3}>\n                    <div className={paperClasses.typo} style={{color: \"green\"}}>\n                        <Typography variant=\"h4\" gutterBottom>\n                            <NumberFormat value={stateData && stateData.Recovered} displayType={'text'} thousandSeparator={true}/>\n                        </Typography>\n                        <Typography className={paperClasses.titleSize} variant=\"subtitle2\" gutterBottom>\n                            Recovered\n                        </Typography>\n                    </div>\n                </Paper>\n\n                <Paper elevation={3}>\n                    <div className={paperClasses.typo} style={{color: \"gray\"}}>\n                        <Typography variant=\"h4\" gutterBottom>\n                            <NumberFormat value={stateData && stateData.Deaths} displayType={'text'} thousandSeparator={true}/>\n                        </Typography>\n                        <Typography className={paperClasses.titleSize} variant=\"subtitle2\" gutterBottom>\n                            Deaths\n                        </Typography>\n                    </div>\n                </Paper>\n            </div>\n          \n             <DataChart />\n            \n        </div>\n    )\n}\n\nexport default StateData\n\n// From https://bitbucket.org/atlassian/atlaskit-mk-2/raw/4ad0e56649c3e6c973e226b7efaeb28cb240ccb0/packages/core/select/src/data/countries.js\nconst countries = [\n  { code: 'AD', label: 'Andorra', phone: '376' },\n  { code: 'AE', label: 'United Arab Emirates', phone: '971' },\n  { code: 'AF', label: 'Afghanistan', phone: '93' },\n  { code: 'AG', label: 'Antigua and Barbuda', phone: '1-268' },\n  { code: 'AI', label: 'Anguilla', phone: '1-264' },\n  { code: 'AL', label: 'Albania', phone: '355' },\n  { code: 'AM', label: 'Armenia', phone: '374' },\n  { code: 'AO', label: 'Angola', phone: '244' },\n  { code: 'AQ', label: 'Antarctica', phone: '672' },\n  { code: 'AR', label: 'Argentina', phone: '54' },\n  { code: 'AS', label: 'American Samoa', phone: '1-684' },\n  { code: 'AT', label: 'Austria', phone: '43' },\n  { code: 'AU', label: 'Australia', phone: '61', suggested: true },\n  { code: 'AW', label: 'Aruba', phone: '297' },\n  { code: 'AX', label: 'Alland Islands', phone: '358' },\n  { code: 'AZ', label: 'Azerbaijan', phone: '994' },\n  { code: 'BA', label: 'Bosnia and Herzegovina', phone: '387' },\n  { code: 'BB', label: 'Barbados', phone: '1-246' },\n  { code: 'BD', label: 'Bangladesh', phone: '880' },\n  { code: 'BE', label: 'Belgium', phone: '32' },\n  { code: 'BF', label: 'Burkina Faso', phone: '226' },\n  { code: 'BG', label: 'Bulgaria', phone: '359' },\n  { code: 'BH', label: 'Bahrain', phone: '973' },\n  { code: 'BI', label: 'Burundi', phone: '257' },\n  { code: 'BJ', label: 'Benin', phone: '229' },\n  { code: 'BL', label: 'Saint Barthelemy', phone: '590' },\n  { code: 'BM', label: 'Bermuda', phone: '1-441' },\n  { code: 'BN', label: 'Brunei Darussalam', phone: '673' },\n  { code: 'BO', label: 'Bolivia', phone: '591' },\n  { code: 'BR', label: 'Brazil', phone: '55' },\n  { code: 'BS', label: 'Bahamas', phone: '1-242' },\n  { code: 'BT', label: 'Bhutan', phone: '975' },\n  { code: 'BV', label: 'Bouvet Island', phone: '47' },\n  { code: 'BW', label: 'Botswana', phone: '267' },\n  { code: 'BY', label: 'Belarus', phone: '375' },\n  { code: 'BZ', label: 'Belize', phone: '501' },\n  { code: 'CA', label: 'Canada', phone: '1', suggested: true },\n  { code: 'CC', label: 'Cocos (Keeling) Islands', phone: '61' },\n  { code: 'CD', label: 'Congo, Democratic Republic of the', phone: '243' },\n  { code: 'CF', label: 'Central African Republic', phone: '236' },\n  { code: 'CG', label: 'Congo, Republic of the', phone: '242' },\n  { code: 'CH', label: 'Switzerland', phone: '41' },\n  { code: 'CI', label: \"Cote d'Ivoire\", phone: '225' },\n  { code: 'CK', label: 'Cook Islands', phone: '682' },\n  { code: 'CL', label: 'Chile', phone: '56' },\n  { code: 'CM', label: 'Cameroon', phone: '237' },\n  { code: 'CN', label: 'China', phone: '86' },\n  { code: 'CO', label: 'Colombia', phone: '57' },\n  { code: 'CR', label: 'Costa Rica', phone: '506' },\n  { code: 'CU', label: 'Cuba', phone: '53' },\n  { code: 'CV', label: 'Cape Verde', phone: '238' },\n  { code: 'CW', label: 'Curacao', phone: '599' },\n  { code: 'CX', label: 'Christmas Island', phone: '61' },\n  { code: 'CY', label: 'Cyprus', phone: '357' },\n  { code: 'CZ', label: 'Czech Republic', phone: '420' },\n  { code: 'DE', label: 'Germany', phone: '49', suggested: true },\n  { code: 'DJ', label: 'Djibouti', phone: '253' },\n  { code: 'DK', label: 'Denmark', phone: '45' },\n  { code: 'DM', label: 'Dominica', phone: '1-767' },\n  { code: 'DO', label: 'Dominican Republic', phone: '1-809' },\n  { code: 'DZ', label: 'Algeria', phone: '213' },\n  { code: 'EC', label: 'Ecuador', phone: '593' },\n  { code: 'EE', label: 'Estonia', phone: '372' },\n  { code: 'EG', label: 'Egypt', phone: '20' },\n  { code: 'EH', label: 'Western Sahara', phone: '212' },\n  { code: 'ER', label: 'Eritrea', phone: '291' },\n  { code: 'ES', label: 'Spain', phone: '34' },\n  { code: 'ET', label: 'Ethiopia', phone: '251' },\n  { code: 'FI', label: 'Finland', phone: '358' },\n  { code: 'FJ', label: 'Fiji', phone: '679' },\n  { code: 'FK', label: 'Falkland Islands (Malvinas)', phone: '500' },\n  { code: 'FM', label: 'Micronesia, Federated States of', phone: '691' },\n  { code: 'FO', label: 'Faroe Islands', phone: '298' },\n  { code: 'FR', label: 'France', phone: '33', suggested: true },\n  { code: 'GA', label: 'Gabon', phone: '241' },\n  { code: 'GB', label: 'United Kingdom', phone: '44' },\n  { code: 'GD', label: 'Grenada', phone: '1-473' },\n  { code: 'GE', label: 'Georgia', phone: '995' },\n  { code: 'GF', label: 'French Guiana', phone: '594' },\n  { code: 'GG', label: 'Guernsey', phone: '44' },\n  { code: 'GH', label: 'Ghana', phone: '233' },\n  { code: 'GI', label: 'Gibraltar', phone: '350' },\n  { code: 'GL', label: 'Greenland', phone: '299' },\n  { code: 'GM', label: 'Gambia', phone: '220' },\n  { code: 'GN', label: 'Guinea', phone: '224' },\n  { code: 'GP', label: 'Guadeloupe', phone: '590' },\n  { code: 'GQ', label: 'Equatorial Guinea', phone: '240' },\n  { code: 'GR', label: 'Greece', phone: '30' },\n  { code: 'GS', label: 'South Georgia and the South Sandwich Islands', phone: '500' },\n  { code: 'GT', label: 'Guatemala', phone: '502' },\n  { code: 'GU', label: 'Guam', phone: '1-671' },\n  { code: 'GW', label: 'Guinea-Bissau', phone: '245' },\n  { code: 'GY', label: 'Guyana', phone: '592' },\n  { code: 'HK', label: 'Hong Kong', phone: '852' },\n  { code: 'HM', label: 'Heard Island and McDonald Islands', phone: '672' },\n  { code: 'HN', label: 'Honduras', phone: '504' },\n  { code: 'HR', label: 'Croatia', phone: '385' },\n  { code: 'HT', label: 'Haiti', phone: '509' },\n  { code: 'HU', label: 'Hungary', phone: '36' },\n  { code: 'ID', label: 'Indonesia', phone: '62' },\n  { code: 'IE', label: 'Ireland', phone: '353' },\n  { code: 'IL', label: 'Israel', phone: '972' },\n  { code: 'IM', label: 'Isle of Man', phone: '44' },\n  { code: 'IN', label: 'India', phone: '91' },\n  { code: 'IO', label: 'British Indian Ocean Territory', phone: '246' },\n  { code: 'IQ', label: 'Iraq', phone: '964' },\n  { code: 'IR', label: 'Iran, Islamic Republic of', phone: '98' },\n  { code: 'IS', label: 'Iceland', phone: '354' },\n  { code: 'IT', label: 'Italy', phone: '39' },\n  { code: 'JE', label: 'Jersey', phone: '44' },\n  { code: 'JM', label: 'Jamaica', phone: '1-876' },\n  { code: 'JO', label: 'Jordan', phone: '962' },\n  { code: 'JP', label: 'Japan', phone: '81', suggested: true },\n  { code: 'KE', label: 'Kenya', phone: '254' },\n  { code: 'KG', label: 'Kyrgyzstan', phone: '996' },\n  { code: 'KH', label: 'Cambodia', phone: '855' },\n  { code: 'KI', label: 'Kiribati', phone: '686' },\n  { code: 'KM', label: 'Comoros', phone: '269' },\n  { code: 'KN', label: 'Saint Kitts and Nevis', phone: '1-869' },\n  { code: 'KP', label: \"Korea, Democratic People's Republic of\", phone: '850' },\n  { code: 'KR', label: 'Korea, Republic of', phone: '82' },\n  { code: 'KW', label: 'Kuwait', phone: '965' },\n  { code: 'KY', label: 'Cayman Islands', phone: '1-345' },\n  { code: 'KZ', label: 'Kazakhstan', phone: '7' },\n  { code: 'LA', label: \"Lao People's Democratic Republic\", phone: '856' },\n  { code: 'LB', label: 'Lebanon', phone: '961' },\n  { code: 'LC', label: 'Saint Lucia', phone: '1-758' },\n  { code: 'LI', label: 'Liechtenstein', phone: '423' },\n  { code: 'LK', label: 'Sri Lanka', phone: '94' },\n  { code: 'LR', label: 'Liberia', phone: '231' },\n  { code: 'LS', label: 'Lesotho', phone: '266' },\n  { code: 'LT', label: 'Lithuania', phone: '370' },\n  { code: 'LU', label: 'Luxembourg', phone: '352' },\n  { code: 'LV', label: 'Latvia', phone: '371' },\n  { code: 'LY', label: 'Libya', phone: '218' },\n  { code: 'MA', label: 'Morocco', phone: '212' },\n  { code: 'MC', label: 'Monaco', phone: '377' },\n  { code: 'MD', label: 'Moldova, Republic of', phone: '373' },\n  { code: 'ME', label: 'Montenegro', phone: '382' },\n  { code: 'MF', label: 'Saint Martin (French part)', phone: '590' },\n  { code: 'MG', label: 'Madagascar', phone: '261' },\n  { code: 'MH', label: 'Marshall Islands', phone: '692' },\n  { code: 'MK', label: 'Macedonia, the Former Yugoslav Republic of', phone: '389' },\n  { code: 'ML', label: 'Mali', phone: '223' },\n  { code: 'MM', label: 'Myanmar', phone: '95' },\n  { code: 'MN', label: 'Mongolia', phone: '976' },\n  { code: 'MO', label: 'Macao', phone: '853' },\n  { code: 'MP', label: 'Northern Mariana Islands', phone: '1-670' },\n  { code: 'MQ', label: 'Martinique', phone: '596' },\n  { code: 'MR', label: 'Mauritania', phone: '222' },\n  { code: 'MS', label: 'Montserrat', phone: '1-664' },\n  { code: 'MT', label: 'Malta', phone: '356' },\n  { code: 'MU', label: 'Mauritius', phone: '230' },\n  { code: 'MV', label: 'Maldives', phone: '960' },\n  { code: 'MW', label: 'Malawi', phone: '265' },\n  { code: 'MX', label: 'Mexico', phone: '52' },\n  { code: 'MY', label: 'Malaysia', phone: '60' },\n  { code: 'MZ', label: 'Mozambique', phone: '258' },\n  { code: 'NA', label: 'Namibia', phone: '264' },\n  { code: 'NC', label: 'New Caledonia', phone: '687' },\n  { code: 'NE', label: 'Niger', phone: '227' },\n  { code: 'NF', label: 'Norfolk Island', phone: '672' },\n  { code: 'NG', label: 'Nigeria', phone: '234' },\n  { code: 'NI', label: 'Nicaragua', phone: '505' },\n  { code: 'NL', label: 'Netherlands', phone: '31' },\n  { code: 'NO', label: 'Norway', phone: '47' },\n  { code: 'NP', label: 'Nepal', phone: '977' },\n  { code: 'NR', label: 'Nauru', phone: '674' },\n  { code: 'NU', label: 'Niue', phone: '683' },\n  { code: 'NZ', label: 'New Zealand', phone: '64' },\n  { code: 'OM', label: 'Oman', phone: '968' },\n  { code: 'PA', label: 'Panama', phone: '507' },\n  { code: 'PE', label: 'Peru', phone: '51' },\n  { code: 'PF', label: 'French Polynesia', phone: '689' },\n  { code: 'PG', label: 'Papua New Guinea', phone: '675' },\n  { code: 'PH', label: 'Philippines', phone: '63' },\n  { code: 'PK', label: 'Pakistan', phone: '92' },\n  { code: 'PL', label: 'Poland', phone: '48' },\n  { code: 'PM', label: 'Saint Pierre and Miquelon', phone: '508' },\n  { code: 'PN', label: 'Pitcairn', phone: '870' },\n  { code: 'PR', label: 'Puerto Rico', phone: '1' },\n  { code: 'PS', label: 'Palestine, State of', phone: '970' },\n  { code: 'PT', label: 'Portugal', phone: '351' },\n  { code: 'PW', label: 'Palau', phone: '680' },\n  { code: 'PY', label: 'Paraguay', phone: '595' },\n  { code: 'QA', label: 'Qatar', phone: '974' },\n  { code: 'RE', label: 'Reunion', phone: '262' },\n  { code: 'RO', label: 'Romania', phone: '40' },\n  { code: 'RS', label: 'Serbia', phone: '381' },\n  { code: 'RU', label: 'Russian Federation', phone: '7' },\n  { code: 'RW', label: 'Rwanda', phone: '250' },\n  { code: 'SA', label: 'Saudi Arabia', phone: '966' },\n  { code: 'SB', label: 'Solomon Islands', phone: '677' },\n  { code: 'SC', label: 'Seychelles', phone: '248' },\n  { code: 'SD', label: 'Sudan', phone: '249' },\n  { code: 'SE', label: 'Sweden', phone: '46' },\n  { code: 'SG', label: 'Singapore', phone: '65' },\n  { code: 'SH', label: 'Saint Helena', phone: '290' },\n  { code: 'SI', label: 'Slovenia', phone: '386' },\n  { code: 'SJ', label: 'Svalbard and Jan Mayen', phone: '47' },\n  { code: 'SK', label: 'Slovakia', phone: '421' },\n  { code: 'SL', label: 'Sierra Leone', phone: '232' },\n  { code: 'SM', label: 'San Marino', phone: '378' },\n  { code: 'SN', label: 'Senegal', phone: '221' },\n  { code: 'SO', label: 'Somalia', phone: '252' },\n  { code: 'SR', label: 'Suriname', phone: '597' },\n  { code: 'SS', label: 'South Sudan', phone: '211' },\n  { code: 'ST', label: 'Sao Tome and Principe', phone: '239' },\n  { code: 'SV', label: 'El Salvador', phone: '503' },\n  { code: 'SX', label: 'Sint Maarten (Dutch part)', phone: '1-721' },\n  { code: 'SY', label: 'Syrian Arab Republic', phone: '963' },\n  { code: 'SZ', label: 'Swaziland', phone: '268' },\n  { code: 'TC', label: 'Turks and Caicos Islands', phone: '1-649' },\n  { code: 'TD', label: 'Chad', phone: '235' },\n  { code: 'TF', label: 'French Southern Territories', phone: '262' },\n  { code: 'TG', label: 'Togo', phone: '228' },\n  { code: 'TH', label: 'Thailand', phone: '66' },\n  { code: 'TJ', label: 'Tajikistan', phone: '992' },\n  { code: 'TK', label: 'Tokelau', phone: '690' },\n  { code: 'TL', label: 'Timor-Leste', phone: '670' },\n  { code: 'TM', label: 'Turkmenistan', phone: '993' },\n  { code: 'TN', label: 'Tunisia', phone: '216' },\n  { code: 'TO', label: 'Tonga', phone: '676' },\n  { code: 'TR', label: 'Turkey', phone: '90' },\n  { code: 'TT', label: 'Trinidad and Tobago', phone: '1-868' },\n  { code: 'TV', label: 'Tuvalu', phone: '688' },\n  { code: 'TW', label: 'Taiwan, Province of China', phone: '886' },\n  { code: 'TZ', label: 'United Republic of Tanzania', phone: '255' },\n  { code: 'UA', label: 'Ukraine', phone: '380' },\n  { code: 'UG', label: 'Uganda', phone: '256' },\n  { code: 'US', label: 'United States', phone: '1', suggested: true },\n  { code: 'UY', label: 'Uruguay', phone: '598' },\n  { code: 'UZ', label: 'Uzbekistan', phone: '998' },\n  { code: 'VA', label: 'Holy See (Vatican City State)', phone: '379' },\n  { code: 'VC', label: 'Saint Vincent and the Grenadines', phone: '1-784' },\n  { code: 'VE', label: 'Venezuela', phone: '58' },\n  { code: 'VG', label: 'British Virgin Islands', phone: '1-284' },\n  { code: 'VI', label: 'US Virgin Islands', phone: '1-340' },\n  { code: 'VN', label: 'Vietnam', phone: '84' },\n  { code: 'VU', label: 'Vanuatu', phone: '678' },\n  { code: 'WF', label: 'Wallis and Futuna', phone: '681' },\n  { code: 'WS', label: 'Samoa', phone: '685' },\n  { code: 'XK', label: 'Kosovo', phone: '383' },\n  { code: 'YE', label: 'Yemen', phone: '967' },\n  { code: 'YT', label: 'Mayotte', phone: '262' },\n  { code: 'ZA', label: 'South Africa', phone: '27' },\n  { code: 'ZM', label: 'Zambia', phone: '260' },\n  { code: 'ZW', label: 'Zimbabwe', phone: '263' },\n];\n"]},"metadata":{},"sourceType":"module"}