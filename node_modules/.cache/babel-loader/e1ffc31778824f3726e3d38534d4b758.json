{"ast":null,"code":"var _jsxFileName = \"/home/farrukh/development/reactjs/Covid-19-Tracker-App/src/components/MainGrid.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core'; // Step 2 - Include the react-fusioncharts component\n\nimport ReactFC from \"react-fusioncharts\"; // Step 3 - Include the fusioncharts library\n\nimport FusionCharts from \"fusioncharts\"; // Step 4 - Include the chart type\n\nimport Column2D from \"fusioncharts/fusioncharts.charts\"; // Step 5 - Include the theme as fusion\n\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\"; // import component\n\nimport GlobalData from './GlobalData';\nimport StateData from './StateData';\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme); // Preparing the chart data\n\nconst chartData = [{\n  label: \"Venezuela\",\n  value: \"290\"\n}, {\n  label: \"Saudi\",\n  value: \"260\"\n}, {\n  label: \"Canada\",\n  value: \"180\"\n}, {\n  label: \"Iran\",\n  value: \"140\"\n}, {\n  label: \"Russia\",\n  value: \"115\"\n}, {\n  label: \"UAE\",\n  value: \"100\"\n}, {\n  label: \"US\",\n  value: \"30\"\n}, {\n  label: \"China\",\n  value: \"30\"\n}]; // Create a JSON object to store the chart configurations\n\nconst chartConfigs = {\n  type: \"line\",\n  // The chart type\n  width: \"700\",\n  // Width of the chart\n  height: \"400\",\n  // Height of the chart\n  dataFormat: \"json\",\n  // Data type\n  dataSource: {\n    // Chart Configuration\n    chart: {\n      caption: \"Countries With Most Oil Reserves [2017-18]\",\n      //Set the chart caption\n      subCaption: \"In MMbbl = One Million barrels\",\n      //Set the chart subcaption\n      xAxisName: \"Country\",\n      //Set the x-axis name\n      yAxisName: \"Reserves (MMbbl)\",\n      //Set the y-axis name\n      numberSuffix: \"K\",\n      theme: \"fusion\" //Set the theme for your chart\n\n    },\n    // Chart Data - from step 2\n    data: chartData\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  hColor: {\n    color: \"black\",\n    fontWeight: \"bolder\"\n  }\n}));\nexport default function CenteredGrid() {\n  const classes = useStyles();\n  const [globalData, setGlobalData] = useState();\n  useEffect(() => {\n    async function fatchData() {\n      const apiResponse = await fetch(\"https://covid-api.mmediagroup.fr/v1/cases\");\n      const dataFromApi = await apiResponse.json();\n\n      for (const [key, value] of Object.entries(objedataFromApict1)) {\n        console.log(`${key}: ${value}`);\n      }\n\n      setGlobalData(dataFromApi); // console.log(dataFromApi)\n    }\n\n    fatchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.hColor,\n    variant: \"h4\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"Global Data\"), /*#__PURE__*/React.createElement(GlobalData, {\n    title: \"Totat Conform Cases\",\n    val: globalData ? globalData.TotalConfirmed : \"Loading...\",\n    color: \"Black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(GlobalData, {\n    title: \"Total Death\",\n    val: globalData ? globalData.TotalDeaths : \"Loading...\",\n    color: \"Red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(GlobalData, {\n    title: \"Total Recovered\",\n    val: globalData ? globalData.TotalRecovered : \"Loading...\",\n    color: \"Green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.hColor,\n    variant: \"h4\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, \"Countries Data\"), /*#__PURE__*/React.createElement(StateData, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ReactFC, Object.assign({}, chartConfigs, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }))))));\n}","map":{"version":3,"sources":["/home/farrukh/development/reactjs/Covid-19-Tracker-App/src/components/MainGrid.jsx"],"names":["React","useEffect","useState","makeStyles","Paper","Grid","Typography","ReactFC","FusionCharts","Column2D","FusionTheme","GlobalData","StateData","fcRoot","chartData","label","value","chartConfigs","type","width","height","dataFormat","dataSource","chart","caption","subCaption","xAxisName","yAxisName","numberSuffix","theme","data","useStyles","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","hColor","fontWeight","CenteredGrid","classes","globalData","setGlobalData","fatchData","apiResponse","fetch","dataFromApi","json","key","Object","entries","objedataFromApict1","console","log","TotalConfirmed","TotalDeaths","TotalRecovered"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography } from '@material-ui/core';\n\n// Step 2 - Include the react-fusioncharts component\nimport ReactFC from \"react-fusioncharts\";\n\n// Step 3 - Include the fusioncharts library\nimport FusionCharts from \"fusioncharts\";\n\n// Step 4 - Include the chart type\nimport Column2D from \"fusioncharts/fusioncharts.charts\";\n\n// Step 5 - Include the theme as fusion\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\n\n// import component\nimport GlobalData from './GlobalData';\nimport StateData from './StateData'\n\nReactFC.fcRoot(FusionCharts, Column2D, FusionTheme);\n\n// Preparing the chart data\nconst chartData = [\n  {\n    label: \"Venezuela\",\n    value: \"290\"\n  },\n  {\n    label: \"Saudi\",\n    value: \"260\"\n  },\n  {\n    label: \"Canada\",\n    value: \"180\"\n  },\n  {\n    label: \"Iran\",\n    value: \"140\"\n  },\n  {\n    label: \"Russia\",\n    value: \"115\"\n  },\n  {\n    label: \"UAE\",\n    value: \"100\"\n  },\n  {\n    label: \"US\",\n    value: \"30\"\n  },\n  {\n    label: \"China\",\n    value: \"30\"\n  }\n];\n\n// Create a JSON object to store the chart configurations\nconst chartConfigs = {\n  type: \"line\", // The chart type\n  width: \"700\", // Width of the chart\n  height: \"400\", // Height of the chart\n  dataFormat: \"json\", // Data type\n  dataSource: {\n    // Chart Configuration\n    chart: {\n      caption: \"Countries With Most Oil Reserves [2017-18]\",    //Set the chart caption\n      subCaption: \"In MMbbl = One Million barrels\",             //Set the chart subcaption\n      xAxisName: \"Country\",           //Set the x-axis name\n      yAxisName: \"Reserves (MMbbl)\",  //Set the y-axis name\n      numberSuffix: \"K\",\n      theme: \"fusion\"                 //Set the theme for your chart\n    },\n    // Chart Data - from step 2\n    data: chartData\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  hColor: {\n    color: \"black\",\n    fontWeight: \"bolder\"\n  },\n}));\n\nexport default function CenteredGrid() {\n  const classes = useStyles();\n\n  const [globalData, setGlobalData] = useState();\n\n  useEffect( ()=> {\n    async function fatchData(){\n      const apiResponse = await fetch(\"https://covid-api.mmediagroup.fr/v1/cases\");\n      const dataFromApi = await apiResponse.json()\n      for (const [key, value] of Object.entries(objedataFromApict1)) {\n        console.log(`${key}: ${value}`);\n      }      \n      setGlobalData(dataFromApi)\n      // console.log(dataFromApi)\n    }\n    fatchData()\n  }, [])\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={0}>\n        <Grid item xs={4}>\n          <Paper className={classes.paper}>\n            <Typography className={classes.hColor} variant=\"h4\" gutterBottom>\n              Global Data\n            </Typography>\n\n            <GlobalData title=\"Totat Conform Cases\" val={globalData ? globalData.TotalConfirmed : \"Loading...\"} color=\"Black\"/>\n            <GlobalData title=\"Total Death\" val={globalData ? globalData.TotalDeaths : \"Loading...\"} color=\"Red\"/>\n            <GlobalData title=\"Total Recovered\" val={globalData ? globalData.TotalRecovered : \"Loading...\"} color=\"Green\"/>\n          </Paper>\n        </Grid>\n        <Grid item xs={8}>\n          <Paper className={classes.paper}>\n            <Typography className={classes.hColor} variant=\"h4\" gutterBottom>\n              Countries Data\n            </Typography>\n\n            <StateData />\n          </Paper>\n        </Grid>\n      </Grid>\n      <Grid container spacing={0}>\n        <Grid item xs={4}>\n          \n        </Grid>\n        <Grid item xs={8}>\n          <Paper className={classes.paper}>\n            <ReactFC {...chartConfigs} />\n          </Paper>\n        </Grid>\n      </Grid>\n\n      \n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}